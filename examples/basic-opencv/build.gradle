plugins {
    id "application"
}

def SUPPORTED_ARCHES = ['windowsx86-64', 'linuxx86-64']

sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()

    maven {
        url('https://frcmaven.wpi.edu/artifactory/release')
    }
}

configurations {
    nativeZip
    implementation.extendsFrom nativeZip
}

dependencies {
    ext.YEAR = WPILIB_VERSION.split('\\.')[0]

    implementation 'com.github.tomtzook:castle:2.0.0-beta.7'
    implementation group: "edu.wpi.first.thirdparty.frc${YEAR}.opencv", name: 'opencv-java', version: "$OPENCV_VERSION"
    implementation "edu.wpi.first.wpiutil:wpiutil-java:$WPILIB_VERSION"
    implementation "edu.wpi.first.ntcore:ntcore-java:$WPILIB_VERSION"

    implementation project(':apriltags4j')

    SUPPORTED_ARCHES.forEach({
        nativeZip group: "edu.wpi.first.thirdparty.frc${YEAR}.opencv", name: 'opencv-jni', version: "$OPENCV_VERSION", classifier: "$it", transitive: false
        implementation group: 'edu.wpi.first.ntcore', name: 'ntcore-jni', version: "$WPILIB_VERSION", classifier:  "$it", transitive: false
    })
}

application {
    mainClassName = 'project.Main'
}

task copyNatives(type: Copy) {
    from {
        configurations.nativeZip.collect {
            zipTree(it).matching {
                include '**/*.so'
                include '**/*.dll'
            }.files
        }
    }
    into project.file("natives")
}

project.processResources.dependsOn copyNatives
